name: Build and Release on Tag

on:
  push:
    tags:
      - '*'  # Trigger the workflow on all tags

jobs:
  prepare:
    name: Prepare for Build and Release
    runs-on: ubuntu-latest
    outputs:
      should_build: ${{ steps.check_commit.outputs.result }}
      commit: ${{ steps.latest_commit.outputs.commit }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set latest commit
      id: latest_commit
      run: echo "commit=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

    - name: Check if the latest commit is already released
      uses: actions/github-script@v7
      id: check_commit
      with:
        script: |
          const latestCommit = "${{ steps.latest_commit.outputs.commit }}"
          const { owner, repo } = context.repo
          let { data: release } = await github.rest.repos.getLatestRelease({ owner, repo })
          const latestReleaseCommit = release.body.split('@')[1]
          if (latestReleaseCommit === latestCommit) {
            return 'false'
          } else {
            return 'true'
          }
        result-encoding: string

  release:
    name: Create GitHub Release
    needs: [prepare]
    if: needs.prepare.outputs.should_build == 'true'
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.tag.outputs.tag }}
    steps:
    - name: Checkout repository for release
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set tag name
      id: tag
      run: |
        tag=$(basename "${{ github.ref }}")
        echo "tag=$tag" >> $GITHUB_OUTPUT

    - name: Read release description from file
      id: read_description
      run: |
        description=$(cat release.txt)
        echo "description=$description" >> $GITHUB_OUTPUT

    - name: Create or update GitHub Release
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GH_REPO: ${{ github.repository }}
      run: |
        tag="${{ steps.tag.outputs.tag }}"
        description="${{ steps.read_description.outputs.description }}"
        gh release create "$tag" --title "$tag" --notes "$description"

  build:
    needs: [prepare, release]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker container with Arch Linux
      run: |
        docker run --rm --privileged -v ${{ github.workspace }}:/workspace -w /workspace archlinux:latest /bin/bash -c "
          # Update and install dependencies
          pacman -Syu --noconfirm
          bash install_dependencies.sh
          
          # Build the project
          bash build.sh
        "

    - name: Upload build artifact to release
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GH_REPO: ${{ github.repository }}
      run: |
        gh release upload "${{ needs.release.outputs.tag }}" "dist/*"

  publish:
    name: Publish Release
    needs: [release, build]
    runs-on: ubuntu-latest
    steps:
    - name: Publish GitHub Release
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GH_REPO: ${{ github.repository }}
      run: gh release edit "${{ needs.release.outputs.tag }}" --draft=false
